When complete DOM is repainting that process is Reloading.

https://github.com/acdlite/react-fiber-architecture

React use Fiber Alogrithm to update Virtual DOM.

reconciliation: 
The algorithm React uses to diff one tree with another to determine which parts need to be changed.

update
A change in the data used to render a React app. Usually the result of `setState`. Eventually results in a re-render.

The central idea of React's API is to think of updates as if they cause the entire app to re-render. 
This allows the developer to reason declaratively, rather than worry about how to efficiently transition the app from any particular state to another
 (A to B, B to C, C to A, and so on).


 Reconciliation is the algorithm behind what is popularly understood as the "virtual DOM." A high-level description goes something like this: when you render a React application, a tree of nodes that describes the app is generated and saved in memory. 
 This tree is then flushed to the rendering environment â€” for example, in the case of a browser application, it's translated to a set of DOM operations. 
 When the app is updated (usually via setState), a new tree is generated. 
 The new tree is diffed with the previous tree to compute which operations are needed to update the rendered app.

1) Different component types are assumed to generate substantially different trees. React will not attempt to diff them, but rather replace the old tree completely.
2) Diffing of lists is performed using keys. Keys should be "stable, predictable, and unique."



Fiber is to enable React to take advantage of scheduling. Specifically, we need to be able to

pause work and come back to it later.
assign priority to different types of work.
reuse previously completed work.
abort work if it's no longer needed.